'''
Given an array of integers, return indices of the two numbers such that they add up to a specific target.

You may assume that each input would have exactly one solution, and you may not use the same element twice.

Example:

Given nums = [2, 7, 11, 15], target = 9,

Because nums[0] + nums[1] = 2 + 7 = 9,
return [0, 1].
'''
class Solution(object):
    def twoSum(self, nums, target):
        """
        :type nums: List[int]
        :type target: int
        :rtype: List[int]
        """
        # Hash Table Method
        seen = {}
        
        for i, n in enumerate(nums):
            temp = target-n
            if temp in seen:
                return [seen[temp], i]
            else:
                seen[n] = i
        return []
    
        # List=[]
        # for i, element in enumerate(nums):
        #     for j in range(i+1,len(nums)):
        #         if target-nums[j] == element:
        #             List.append(i)
        #             List.append(j)
        # return List
    # Time complexity = O(n^2)
    # Space complexity = O(1)
    
    
