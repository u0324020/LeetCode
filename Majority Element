'''
Given an array of size n, find the majority element. The majority element is the element that appears more than ⌊ n/2 ⌋ times.

You may assume that the array is non-empty and the majority element always exist in the array.

Example 1:

Input: [3,2,3]
Output: 3
Example 2:

Input: [2,2,1,1,1,2,2]
Output: 2
'''
class Solution:
    def majorityElement(self, nums: List[int]) -> int:
        c = collections.Counter(nums)
        #計算出現頻率的hash table
        #ans = c.most_common() #會依照頻率排序
        #ans = [(3, 2), (2, 1)]
        return((c.most_common())[0][0])#3
        
        #別人的解法
        counts = collections.Counter(nums)
        return max(counts.keys(), key=counts.get)
